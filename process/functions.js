const {
    timeParse
} = require('d3-time-format')

const {
    getJson
} = require('./utils.js')
const lawmakers = getJson('./scrapers/lawmakers/process/lawmakers.json')

const NAME_CLEANING = {
    // Standardizes various lawmaker name permutations presented in LAWS

    // 2019 Senate
    'Ankney, Duane': 'Duane Ankney',
    'Fitzpatrick, Steve': 'Steve Fitzpatrick',
    'Malek, Sue': 'Sue Malek',
    'Sesso, Jon': 'Jon Sesso',
    'Sesso, Jon C.': 'Jon Sesso',
    'Jon C Sesso': 'Jon Sesso',
    'Barrett, Dick': 'Dick Barrett',
    'Flowers, Pat': 'Pat Flowers',
    'McClafferty, Edith': 'Edie McClafferty',
    'McClafferty, Edith (Edie)': 'Edie McClafferty',
    'Edith (Edie) McClafferty': 'Edie McClafferty',
    'Small, Jason': 'Jason Small',
    'Small, Jason D.': 'Jason Small',
    'Jason D Small': 'Jason Small',
    'Bennett, Bryce': 'Bryce Bennett',
    'Gauthier, Terry': 'Terry Gauthier',
    'McConnell, Nate': 'Nate McConnell',
    'Smith, Cary': 'Cary Smith',
    'Blasdel, Mark': 'Mark Blasdel',
    'Gillespie, Bruce': 'Bruce Gillespie',
    'McNally, Mary': 'Mary McNally',
    'Smith, Frank': 'Frank Smith',
    'Bogner, Kenneth': 'Kenneth Bogner',
    'Gross, Jen': 'Jen Gross',
    'Olszewski, Albert': 'Albert Olszewski',
    'Tempel, Russel': 'Russ Tempel',
    'Tempel, Russel (Russ)': 'Russ Tempel',
    'Russel (Russ) Tempel': 'Russ Tempel',
    'Boland, Carlie': 'Carlie Boland',
    'Hinebauch, Steve': 'Steve Hinebauch',
    'Osmundson, Ryan': 'Ryan Osmundson',
    'Thomas, Fred': 'Fred Thomas',
    'Brown, Dee': 'Dee Brown',
    'Hoven, Brian': 'Brian Hoven',
    'Phillips, Mike': 'Mike Phillips',
    'Vance, Gordon': 'Gordon Vance',
    'Cohenour, Jill': 'Jill Cohenour',
    'Howard, David': 'David Howard',
    'Pomnichowski, JP': 'JP Pomnichowski',
    'Vuckovich, Gene': 'Gene Vuckovich',
    'Cuffe, Mike': 'Mike Cuffe',
    'Jacobson, Tom': 'Tom Jacobson',
    'Regier, Keith': 'Keith Regier',
    'Webb, Roger': 'Roger Webb',
    'Ellis, Janet': 'Janet Ellis',
    'Kary, Douglas': 'Doug Kary',
    'Kary, Douglas (Doug)': 'Doug Kary',
    'Douglas (Doug) Kary': 'Doug Kary',
    'Richmond, Tom': 'Tom Richmond',
    'Webber, Susan': 'Susan Webber',
    'Ellsworth, Jason': 'Jason Ellsworth',
    'Ellsworth, Jason W.': 'Jason Ellsworth',
    'Jason W Ellsworth': 'Jason Ellsworth',
    'Keenan, Bob': 'Bob Keenan',
    'Sales, Scott': 'Scott Sales',
    'Welborn, Jeffery': 'Jeff Welborn',
    'Welborn, Jeffrey W.': 'Jeff Welborn',
    'Jeffery W Welborn': 'Jeff Welborn',
    'Jeffrey W Welborn': 'Jeff Welborn',
    'Welborn, Jeffrey': 'Jeff Welborn',
    'Esp, John': 'John Esp',
    'Lang, Mike': 'Mike Lang',
    'Salomon, Daniel': 'Dan Salomon',
    'Salomon, Daniel R.': 'Dan Salomon',
    'Daniel R Salomon': 'Dan Salomon',
    'Fielder, Jennifer': 'Jennifer Fielder',
    'MacDonald, Margaret': 'Margie MacDonald',
    'MacDonald, Margaret (Margie)': 'Margie MacDonald',
    'Margaret (Margie) MacDonald': 'Margie MacDonald',
    'Sands, Diane': 'Diane Sands',

    // 2019 House
    'Abbott, Kim': 'Kim Abbott',
    'Farris-Olsen, Robert': 'Robert Farris-Olsen',
    'Keogh, Connie': 'Connie Keogh',
    'Redfield, Alan': 'Alan Redfield',
    'Anderson, Fred': 'Fred Anderson',
    'Fern, Dave': 'Dave Fern',
    'Kerr-Carpenter, Emma': 'Emma Kerr-Carpenter',
    'Regier, Matt': 'Matt Regier',
    'Bachmeier, Jacob': 'Jacob Bachmeier',
    'Fitzgerald, Ross': 'Ross Fitzgerald',
    'Fitzgerald, Ross H.': 'Ross Fitzgerald',
    'Ross H Fitzgerald': 'Ross Fitzgerald',
    'Knudsen, Rhonda': 'Rhonda Knudsen',
    'Ricci, Vince': 'Vince Ricci',
    'Bahr, Jade': 'Jade Bahr',
    'Fleming, Frank': 'Frank Fleming',
    'Knudsen, Casey': 'Casey Knudsen',
    'Running Wolf, Tyson': 'Tyson Running Wolf',
    'Runningwolf, Tyson T.': 'Tyson Running Wolf',
    'Tyson T Running Wolf': 'Tyson Running Wolf',
    'Running Wolf, Tyson T.': 'Tyson Running Wolf',
    'Ballance, Nancy': 'Nancy Ballance',
    'Fuller, John': 'John Fuller',
    'Krautter, Joel': 'Joel Krautter',
    'Krautter, Joel G.': 'Joel Krautter',
    'Joel G Krautter': 'Joel Krautter',
    'Ryan, Marilyn': 'Marilyn Ryan',
    'Bartel, Dan': 'Dan Bartel',
    'Funk, Moffie': 'Moffie Funk',
    'Krotkov, Jasmine': 'Jasmine Krotkov',
    'Sales, Walt': 'Walt Sales',
    'Beard, Becky': 'Becky Beard',
    'Galt, Wylie': 'Wylie Galt',
    'Lenz, Dennis': 'Dennis Lenz',
    'Lenz, Dennis R.': 'Dennis Lenz',
    'Dennis R Lenz': 'Dennis Lenz',
    'Schreiner, Casey': 'Casey Schreiner',
    'Bedey, David': 'David Bedey',
    'Garcia, Rodney': 'Rodney Garcia',
    'Loge, Denley': 'Denley Loge',
    'Loge, Denley M.': 'Denley Loge',
    'Denley M Loge': 'Denley Loge',
    'Shaw, Ray': 'Ray Shaw',
    'Shaw, Ray L.': 'Ray Shaw',
    'Ray L Shaw': 'Ray Shaw',
    'Berglee, Seth': 'Seth Berglee',
    'Garner, Frank': 'Frank Garner',
    'Lynch, Ryan': 'Ryan Lynch',
    'Sheldon-Galloway, Lola': 'Lola Sheldon-Galloway',
    'Galloway, Lola': 'Lola Sheldon-Galloway',
    'Bessette, Barbara': 'Barbara Bessette',
    'Glimm, Carl': 'Carl Glimm',
    'Mandeville, Forrest': 'Forrest Mandeville',
    'Skees, Derek': 'Derek Skees',
    'Bishop, Laurie': 'Laurie Bishop',
    'Greef, Sharon': 'Sharon Greef',
    'Manzella, Theresa': 'Theresa Manzella',
    'Smith, Bridget': 'Bridget Smith',
    'Brown, Bob': 'Bob Brown',
    'Grubbs, Bruce': 'Bruce Grubbs',
    'Marler, Marilyn': 'Marilyn Marler',
    'Stewart Peregoy, Sharon': 'Sharon Stewart Peregoy',
    'Brown, Zach': 'Zach Brown',
    'Gunderson, Steve': 'Steve Gunderson',
    'McKamey, Wendy': 'Wendy McKamey',
    'Sullivan, Katie': 'Katie Sullivan',
    'Burnett, Tom': 'Tom Burnett',
    'Hamilton, Jim': 'Jim Hamilton',
    'Mercer, Bill': 'Bill Mercer',
    'Sweeney, Mark': 'Mark Sweeney',
    'Buttrey, Edward': 'Ed Buttrey',
    'Edward Buttrey': 'Ed Buttrey',
    'Hamlett, Bradley': 'Bradley Hamlett',
    'Moore, Frederick': 'Eric Moore',
    'Moore, Frederick (Eric)': 'Eric Moore',
    'Frederick (Eric) Moore': 'Eric Moore',
    'Tschida, Brad': 'Brad Tschida',
    'Caferro, Mary': 'Mary Caferro',
    'Harvey, Derek': 'Derek Harvey',
    'Harvey, Derek J.': 'Derek Harvey',
    'Derek J Harvey': 'Derek Harvey',
    'Moore, Terry': 'Terry Moore',
    'Usher, Barry': 'Barry Usher',
    'Curdy, Willis': 'Willis Curdy',
    'Hayman, Denise': 'Denise Hayman',
    'Morigeau, Shane': 'Shane Morigeau',
    'Morigeau, Shane A.': 'Shane Morigeau',
    'Shane A Morigeau': 'Shane Morigeau',
    'Vinton, Sue': 'Sue Vinton',
    'Custer, Geraldine': 'Geraldine Custer',
    'Hertz, Greg': 'Greg Hertz',
    'Mortensen, Dale': 'Dale Mortensen',
    'Weatherwax, Marvin': 'Marvin Weatherwax',
    'DeVries, Greg': 'Greg DeVries',
    'Holmlund, Kenneth': 'Kenneth Holmlund',
    'Holmlund, Kenneth L.': 'Kenneth Holmlund',
    'Kenneth L Holmlund': 'Kenneth Holmlund',
    'Noland, Mark': 'Mark Noland',
    'Webb, Peggy': 'Peggy Webb',
    'Doane, Alan': 'Alan Doane',
    'Hopkins, Mike': 'Mike Hopkins',
    'Olsen, Andrea': 'Andrea Olsen',
    'Welch, Tom': 'Tom Welch',
    'Dooling, Julie': 'Julie Dooling',
    'Jones, Llew': 'Llew Jones',
    'Peppers, Rae': 'Rae Peppers',
    'White, Kerry': 'Kerry White',
    'Dudik, Kimberly': 'Kim Dudik',
    'Kimberly Dudik': 'Kim Dudik',
    'Karjala, Jessica': 'Jessica Karjala',
    'Perry, Zac': 'Zac Perry',
    'Windy Boy, Jonathan': 'Jonathan Windy Boy',
    'Dunn, David': 'David Dunn',
    'Kassmier, Joshua': 'Josh Kassmier',
    'Joshua Kassmier': 'Josh Kassmier',
    'Pierson, Gordon': 'Gordon Pierson',
    'Winter, Thomas': 'Tom Winter',
    'Thomas Winter': 'Tom Winter',
    'Dunwell, Mary Ann': 'Mary Ann Dunwell',
    'Keane, Jim': 'Jim Keane',
    'Pope, Christopher': 'Chris Pope',
    'Christopher Pope': 'Chris Pope',
    'Woods, Tom': 'Tom Woods',
    'Duram, Neil': 'Neil Duram',
    'Kelker, Kathy': 'Kathy Kelker',
    'Read, Joe': 'Joe Read',
    'Zolnikov, Daniel': 'Daniel Zolnikov',

    // New in 2021
    'Bertoglio, Marta': 'Marta Bertoglio',
    'Binkley, Michele': 'Michele Binkley',
    'Boldman, Ellie': 'Ellie Boldman',
    'Brewster, Larry': 'Larry Brewster',
    'Buckley, Alice': 'Alice Buckley',
    'Carlson, Jennifer': 'Jennifer Carlson',
    'Fielder, Paul': 'Paul Fielder',
    'Fox, Mike': 'Mike Fox',
    'France, Tom': 'Tom France',
    'Frazer, Gregory': 'Gregory Frazer',
    'Friedel, Chris': 'Chris Friedel',
    'Galloway, Steven': 'Steven Galloway',
    'Gillette, Jane': 'Jane Gillette',
    'Gist, Steve': 'Steve Gist',
    'Hawk, Donavon': 'Donavon Hawk',
    'Hill, Ed': 'Ed Hill',
    'Hinkle, Jedediah': 'Jedediah Hinkle',
    'Hinkle, Caleb': 'Caleb Hinkle',
    'Kerns, Scot': 'Scot Kerns',
    'Kortum, Kelly': 'Kelly Kortum',
    'Ler, Brandon': 'Brandon Ler',
    'Malone, Marty': 'Marty Malone',
    'Marshall, Ron': 'Ron Marshall',
    'McGillvray, Tom': 'Tom McGillvray',
    'Mitchell, Braxton': 'Braxton Mitchell',
    'Molnar, Brad': 'Brad Molnar',
    'Nave, Fiona': 'Fiona Nave',
    'Novak, Sara': 'Sara Novak',
    'O\'Brien, Shannon': 'Shannon O\'Brien',
    'Patelis, Jimmy': 'Jimmy Patelis',
    'Phalen, Bob': 'Bob Phalen',
    'Putnam, Brian': 'Brian Putnam',
    'Regier, Amy': 'Amy Regier',
    'Reksten, Linda': "Linda Reksten",
    '<skip>, Linda': "Linda Reksten", // Is this a bad idea?
    'Schillinger, Jerry': "Jerry Schillinger",
    'Seekins-Crowe, Kerri': "Kerri Seekins-Crowe",
    'Stafman, Ed': "Ed Stafman",
    'Stromswold, Mallerie': "Mallerie Stromswold",
    'Tenenbaum, Danny': "Danny Tenenbaum",
    'Thane, Mark': "Mark Thane",
    'Trebas, Jeremy': "Jeremy Trebas",
    'Walsh, Kenneth': "Kenneth Walsh",
    'Whitman, Kathy': 'Kathy Whitman',
    'Whiteman Pena, Rynalea': 'Rynalea Whiteman Pena',
    'Zolnikov, Katie': 'Katie Zolnikov',
}

LAST_NAMES = {
    'Mark Noland': 'Noland',
    'Tom Richmond': 'Richmond',
    'Mary McNally': 'McNally',
    'Jasmine Krotkov': 'Krotkov',
    'Wylie Galt': 'Galt',
    'JP Pomnichowski': 'Pomnichowski',
    'Marilyn Ryan': 'Ryan',
    'Jessica Karjala': 'Karjala',
    'Peggy Webb': 'Webb',
    'Barry Usher': 'Usher',
    'Sharon Stewart Peregoy': 'Peregoy',
    'Robert Farris-Olsen': 'Farris-Olsen',
    'Daniel Zolnikov': 'Zolnikov',
    'Vince Ricci': 'Ricci',
    'Dan Bartel': 'Bartel',
    'Nate McConnell': 'McConnell',
    'Kathy Kelker': 'Kelker',
    'Tom Jacobson': 'Jacobson',
    'Katie Sullivan': 'Sullivan',
    'Ed Buttrey': 'Buttrey',
    'Walt Sales': 'Sales',
    'Jim Keane': 'Keane',
    'Kenneth Bogner': 'Bogner',
    'Jason Ellsworth': 'Ellsworth',
    'Terry Moore': 'Moore',
    'Fred Thomas': 'Thomas',
    'Ryan Lynch': 'Lynch',
    'Llew Jones': 'Jones',
    'Janet Ellis': 'Ellis',
    'Margie MacDonald': 'MacDonald',
    'Gene Vuckovich': 'Vuckovich',
    'Derek Harvey': 'Harvey',
    'Sue Vinton': 'Vinton',
    'Mike Hopkins': 'Hopkins',
    'Tom Woods': 'Woods',
    'Rhonda Knudsen': 'Knudsen',
    'Matt Regier': 'Regier',
    'Frank Garner': 'Garner',
    'Sue Malek': 'Malek',
    'Ray Shaw': 'Shaw',
    'Mark Sweeney': 'Sweeney',
    'Greg Hertz': 'Hertz',
    'Scott Sales': 'Sales',
    'Jonathan Windy Boy': 'Windy Boy',
    'Dale Mortensen': 'Mortensen',
    'Andrea Olsen': 'Olsen',
    'John Fuller': 'Fuller',
    'Diane Sands': 'Sands',
    'Steve Hinebauch': 'Hinebauch',
    'Duane Ankney': 'Ankney',
    'Brad Tschida': 'Tschida',
    'Chris Pope': 'Pope',
    'Dick Barrett': 'Barrett',
    'Bob Keenan': 'Keenan',
    'Bruce Grubbs': 'Grubbs',
    'Geraldine Custer': 'Custer',
    'Laurie Bishop': 'Bishop',
    'Bruce Gillespie': 'Gillespie',
    'Jennifer Fielder': 'Fielder',
    'Ross Fitzgerald': 'Fitzgerald',
    'Becky Beard': 'Beard',
    'Kim Abbott': 'Abbott',
    'Dan Salomon': 'Salomon',
    'Mark Blasdel': 'Blasdel',
    'Jeff Welborn': 'Welborn',
    'Steve Gunderson': 'Gunderson',
    'Julie Dooling': 'Dooling',
    'Bryce Bennett': 'Bennett',
    'Jen Gross': 'Gross',
    'Russ Tempel': 'Tempel',
    'David Bedey': 'Bedey',
    'Tom Burnett': 'Burnett',
    'Bradley Hamlett': 'Hamlett',
    'Kenneth Holmlund': 'Holmlund',
    'Jacob Bachmeier': 'Bachmeier',
    'Terry Gauthier': 'Gauthier',
    'Emma Kerr-Carpenter': 'Kerr-Carpenter',
    'Kim Dudik': 'Dudik',
    'Barbara Bessette': 'Bessette',
    'Albert Olszewski': 'Olszewski',
    'Theresa Manzella': 'Manzella',
    'Shane Morigeau': 'Morigeau',
    'Bill Mercer': 'Mercer',
    'Frank Fleming': 'Fleming',
    'Mike Cuffe': 'Cuffe',
    'David Howard': 'Howard',
    'Zac Perry': 'Perry',
    'Josh Kassmier': 'Kassmier',
    'Derek Skees': 'Skees',
    'Alan Redfield': 'Redfield',
    'Roger Webb': 'Webb',
    'Casey Schreiner': 'Schreiner',
    'Carl Glimm': 'Glimm',
    'Willis Curdy': 'Curdy',
    'Brian Hoven': 'Hoven',
    'Seth Berglee': 'Berglee',
    'Zach Brown': 'Brown',
    'David Dunn': 'Dunn',
    'Denley Loge': 'Loge',
    'Carlie Boland': 'Boland',
    'Mike Lang': 'Lang',
    'Jade Bahr': 'Bahr',
    'Bridget Smith': 'Smith',
    'Joel Krautter': 'Krautter',
    'Pat Flowers': 'Flowers',
    'Jason Small': 'Small',
    'Steve Fitzpatrick': 'Fitzpatrick',
    'Doug Kary': 'Kary',
    'Dee Brown': 'Brown',
    'Fred Anderson': 'Anderson',
    'Forrest Mandeville': 'Mandeville',
    'Jon Sesso': 'Sesso',
    'Marvin Weatherwax': 'Weatherwax',
    'Tyson Running Wolf': 'Running Wolf',
    'Rodney Garcia': 'Garcia',
    'Neil Duram': 'Duram',
    'Gordon Pierson': 'Pierson',
    'Connie Keogh': 'Keogh',
    'Tom Welch': 'Welch',
    'Mike Phillips': 'Phillips',
    'Jill Cohenour': 'Cohenour',
    'Cary Smith': 'Smith',
    'Frank Smith': 'Smith',
    'Denise Hayman': 'Hayman',
    'Jim Hamilton': 'Hamilton',
    'Wendy McKamey': 'McKamey',
    'Dennis Lenz': 'Lenz',
    'John Esp': 'Esp',
    'Mary Ann Dunwell': 'Dunwell',
    'Joe Read': 'Read',
    'Casey Knudsen': 'Knudsen',
    'Lola Sheldon-Galloway': 'Sheldon-Galloway',
    'Moffie Funk': 'Funk',
    'Susan Webber': 'Webber',
    'Keith Regier': 'Regier',
    'Eric Moore': 'Moore',
    'Edie McClafferty': 'McClafferty',
    'Greg DeVries': 'DeVries',
    'Rae Peppers': 'Peppers',
    'Alan Doane': 'Doane',
    'Ryan Osmundson': 'Osmundson',
    'Kerry White': 'White',
    'Dave Fern': 'Fern',
    'Sharon Greef': 'Greef',
    'Gordon Vance': 'Vance',
    'Bob Brown': 'Brown',
    'Mary Caferro': 'Caferro',
    'Nancy Ballance': 'Ballance',
    'Tom Winter': 'Winter',
    'Marilyn Marler': 'Marler',
    'Larry Brewster': 'Brewster',
    'Debo Powers': 'Powers',
    'Katie Zolnikov': 'Zolnikov',

    // New lawmakers in 2021
    'Marta Bertoglio': 'Bertoglio',
    'Michele Binkley': 'Binkley',
    'Ellie Boldman': 'Boldman',
    'Alice Buckley': 'Buckley',
    'Jennifer Carlson': 'Carlson',
    'Paul Fielder': 'Fielder',
    'Mike Fox': 'Fox',
    'Tom France': 'France',
    'Gregory Frazer': 'Frazer',
    'Chris Friedel': 'Friedel',
    'Steven Galloway': 'Galloway',
    'Jane Gillette': 'Gillette',
    'Steve Gist': 'Gist',
    'Donavon Hawk': 'Hawk',
    'Ed Hill': 'Hill',
    'Jedediah Hinkle': 'Hinkle',
    'Caleb Hinkle': 'Hinkle',
    'Scot Kerns': 'Kerns',
    'Kelly Kortum': 'Kortum',
    'Brandon Ler': 'Ler',
    'Marty Malone': 'Malone',
    'Ron Marshall': 'Marshall',
    'Tom McGillvray': 'McGillvray',
    'Braxton Mitchell': 'Mitchell',
    'Brad Molnar': 'Molnar',
    'Fiona Nave': 'Nave',
    'Sara Novak': 'Novak',
    'Shannon O\'Brien': "O'Brien",
    'Jimmy Patelis': 'Patelis',
    'Bob Phalen': 'BPhalen',
    'Brian Putnam': 'Putnam',
    'Amy Regier': 'Regier',
    "Linda Reksten": "Reksten",
    "Jerry Schillinger": "Schillinger",
    "Kerri Seekins-Crowe": "Seekins-Crowe",
    "Ed Stafman": "Stafman",
    "Mallerie Stromswold": "Stromswold",
    "Danny Tenenbaum": "Tenenbaum",
    "Mark Thane": "Thane",
    "Jeremy Trebas": "Trebas",
    "Kenneth Walsh": 'Walsh',
    'Kathy Whitman': 'Whitman',
    'Rynalea Whiteman Pena': 'Whiteman Pena',
}

module.exports.lawmakerFromLawsName = (laws_name) => {
    const lookupName = NAME_CLEANING[laws_name] || laws_name
    const lawmaker = lawmakers.find(d => d.name === lookupName)
    if (!lawmaker) {
        // console.log(`Missing match name: ${lookupName}`)
        throw `Can't match voter name: ${lookupName}`
    }
    return lawmaker
}

module.exports.lawmakerLastName = (name) => {
    // Assumes cleaned version of name
    if (!(name in LAST_NAMES)) console.log('Missing last name match for', name)
    return LAST_NAMES[name]
}

module.exports.getCanonicalLawmakerNames = () => Array.from(new Set(Object.values(NAME_CLEANING)))

module.exports.filterToFloorVotes = (votes) => {
    // console.log('vote length', votes.map(d => d.votes.length))
    // Hacky way to filter vote list to floor votes
    // See if there's a way to add a setting data point to Vote scraper
    // using 99 instead of 100 below because of missing Steve Gunderson bug
    return votes.filter(d => (d.votes.length >= 99) || (d.votes.length === 50))
}

module.exports.billKey = (identifier) => identifier.substring(0, 2).toLowerCase() + '-' + identifier.substring(3,)

module.exports.calculateSummaryStats = (bills, votes) => {
    // status tests
    const introduced = d => d.data.progress.toFirstChamber
    const pastFirstChamber = d => d.data.progress.firstChamberStatus === 'passed'
    const pastSecondChamber = d => d.data.progress.secondChamberStatus === 'passed'
    const toGovernor = d => d.data.progress.toGovernor
    const signedByGovernor = d => d.data.progress.governorStatus === 'signed'
    const vetoedByGovernor = d => d.data.progress.governorStatus === 'vetoed'
    const enactedWithNoGovernorSignature = d => d.data.progress.governorStatus === 'became law unsigned'
    const becameLaw = d => d.data.progress.finalOutcome === 'passed'
    
    const actualBills = bills
        .filter(d => d.type === 'bill')
    const senateBills = actualBills.filter(d => d.data.identifier[0] === 'S')
    const houseBills = actualBills.filter(d => d.data.identifier[0] === 'H')
    const resolutions = bills.filter(d => ['resolution', 'joint resolution', 'referendum proposal'].includes(d.type))
    
    console.log("Bill stats")
    console.table([
        {key: 'bills', value: actualBills.length},
        {key: '-- house bills', value: houseBills.length},
        {key: '-- senate bills', value: senateBills.length},
        {key: 'resolutions', value: bills.filter(d => d.type === 'resolution').length},
        {key: 'joint resolutions', value: bills.filter(d => d.type === 'joint resolution').length},
        {key: 'referendum proposals', value: bills.filter(d => d.type === 'referendum proposal').length},
    ])

    const summary = {
        numBillsAndResolutions: bills.length,
        senateBills: {
            total: senateBills.length,
            introduced: senateBills.filter(introduced).length,
            pastFirstChamber: senateBills.filter(pastFirstChamber).length,
            pastSecondChamber: senateBills.filter(pastSecondChamber).length,
            toGovernor: senateBills.filter(toGovernor).length,
            pastGovernor: senateBills.filter(signedByGovernor).length + senateBills.filter(enactedWithNoGovernorSignature).length,
        },
        houseBills: {
            total: houseBills.length,
            introduced: houseBills.filter(introduced).length,
            pastFirstChamber: houseBills.filter(pastFirstChamber).length,
            pastSecondChamber: houseBills.filter(pastSecondChamber).length,
            toGovernor: houseBills.filter(toGovernor).length,
            pastGovernor: houseBills.filter(signedByGovernor).length + houseBills.filter(enactedWithNoGovernorSignature).length,
        },
        resolutions: {
            total: resolutions.length,
            introduced: resolutions.filter(introduced).length,
            passed: resolutions.filter(becameLaw).length,
        }


    }
    return summary
}

const actionsThatCanBeFuture = ['Scheduled for Executive Action','Hearing', 'Scheduled for 2nd Reading', 'Scheduled for 3rd Reading']
module.exports.mostRecentActionDate = bills => {
    const actions = bills.map(d => d.actions).flat()
        .filter(d => !actionsThatCanBeFuture.includes(d.description)) // excludes future actions, hopefully
        .filter(d => new Date(d.date) < new Date()) // explicitly exclude other future actions (as data entry errors)
    const mostRecent = actions.reduce((prev, current) => new Date(prev.date) > new Date(current.date) ? prev : current)
    // console.log(mostRecent)
    return timeParse('%Y-%m-%d')(mostRecent.date)
}